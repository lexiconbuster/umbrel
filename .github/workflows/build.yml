name: Build

on:
  workflow_dispatch:

concurrency:
  group: build
  cancel-in-progress: false

jobs:
  shellcheck:
    name: Test
    uses: ./.github/workflows/check.yml
  build:
    name: Build
    needs: shellcheck
    runs-on: ubuntu-latest
    permissions:
      actions: write
      packages: write
      contents: read
    steps:
      - 
        name: Check if the tag exists locally
        uses: action-pack/tag-exists@v1
        id: checkTag
        with: 
          tag: 'v${{ vars.VERSION }}'         
      -
        name: Finish when found
        run: |
          #!/bin/bash
          beta="false"
          
          val="${{ steps.checkTag.outputs.exists }}"

          [[ "${{ vars.VERSION }}" == *"rc"* ]] && beta="true"
          [[ "${{ vars.VERSION }}" == *"beta"* ]] && beta="true"
          [[ "${{ vars.VERSION }}" == *"test"* ]] && val="true"
          [[ "${{ vars.VERSION }}" == *"alpha"* ]] && val="true"

          echo "beta=${beta}" >> $GITHUB_ENV
          echo "exists=${val}" >> $GITHUB_ENV
      -
        name: Checkout
        if: env.exists == 'false'
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
      -
        name: Docker metadata
        if: env.exists == 'false'
        id: meta
        uses: docker/metadata-action@v5
        with:
          context: git
          images: |
            ${{ secrets.DOCKERHUB_REPO }}
            ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=latest,priority=100,enable=${{ env.beta == 'false' }}
            type=raw,value=${{ vars.VERSION }}
          labels: |
            org.opencontainers.image.title=${{ vars.NAME }}
        env:
          DOCKER_METADATA_ANNOTATIONS_LEVELS: manifest,index     
      - 
        name: Set up Docker Buildx
        if: env.exists == 'false'
        uses: docker/setup-buildx-action@v3
      -
        name: Login into Docker Hub
        if: env.exists == 'false'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Login to GitHub Container Registry
        if: env.exists == 'false'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Build Docker image
        if: env.exists == 'false'
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          provenance: false
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}
          build-args: |
            VERSION_ARG=${{ steps.meta.outputs.version }}
      -
        name: Create a release
        if: env.exists == 'false'
        uses: action-pack/github-release@v2
        with:
          tag: "v${{ steps.meta.outputs.version }}"
          title: "v${{ steps.meta.outputs.version }}"
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
      -
        name: Send mail
        if: env.exists == 'false'
        uses: action-pack/send-mail@v1
        with:
          to: ${{secrets.MAILTO}}
          from: Github Actions <${{secrets.MAILTO}}>
          connection_url: ${{secrets.MAIL_CONNECTION}}
          subject: Build of ${{ github.event.repository.name }} v${{ steps.meta.outputs.version }} completed
          body: |
              The build job of ${{ github.event.repository.name }} v${{ steps.meta.outputs.version }} was completed successfully! 
              
              See https://github.com/${{ github.repository }}/actions for more information.
